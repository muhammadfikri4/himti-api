generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(ADMIN)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nim       String
  Absensi   Absensi[]

  @@index([name, nim])
}

model Dosen {
  id          String   @id @default(uuid())
  nidn        String   @unique
  name        String
  email       String?  @unique
  numberPhone BigInt?  @map("number_phone")
  lesson      String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name, nidn, createdAt])
}

model Angkatan {
  id        String    @id @default(uuid())
  year      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Anggota   Anggota[]

  @@index([year, createdAt])
}

model Anggota {
  id         String       @id @default(uuid())
  name       String
  email      String?
  nim        String       @unique
  angkatanId String       @map("angkatan_id")
  createdAt  DateTime     @default(now())
  isActive   Boolean?     @default(true)
  updatedAt  DateTime     @updatedAt
  Alumni     Alumni[]
  angkatan   Angkatan     @relation(fields: [angkatanId], references: [id])
  Struktural Struktural[]

  @@index([angkatanId, name, nim, createdAt])
}

model Alumni {
  id        String   @id @unique @default(uuid())
  company   String?
  image     String
  anggotaId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  anggota   Anggota  @relation(fields: [anggotaId], references: [id])
}

model Department {
  id        String   @id @unique @default(uuid())
  name      String
  createdAt DateTime @default(now())
  isActive  Boolean  @default(true)
  updatedAt DateTime @updatedAt
}

model Struktural {
  id        String   @id @unique @default(uuid())
  jabatan   Jabatan
  instagram String?
  facebook  String?
  twitter   String?
  linkedin  String?
  image     String
  anggotaId String
  createdAt DateTime @default(now())
  isActive  Boolean  @default(true)
  updatedAt DateTime @updatedAt
  anggota   Anggota  @relation(fields: [anggotaId], references: [id])

  @@index([anggotaId])
}

model Acara {
  id          String    @id @unique @default(uuid())
  name        String
  description String?
  image       String
  isOpen      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  endTime     DateTime  @default(now())
  startTime   DateTime  @default(now())
  Absensi     Absensi[]

  @@index([name, startTime, endTime])
}

model Absensi {
  id         Int      @id @unique @default(autoincrement())
  image      String
  acaraId    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  acara      Acara    @relation(fields: [acaraId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  coordinate String

  @@index([userId, acaraId, createdAt])
}

enum Jabatan {
  KETUA_HIMPUNAN
  WAKIL_KETUA_HIMPUNAN
  BENDAHARA
  SEKRETARIS
  KETUA_DEPARTMENT
}

enum Role {
  ADMIN
  USER
  ANGGOTA
}
